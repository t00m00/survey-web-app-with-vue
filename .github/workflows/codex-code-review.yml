name: Codex CLI code review

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: write

jobs:
  code-review:
    name: コードレビュー
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '@codex') &&
      (contains(github.event.comment.body, 'レビュー') || contains(github.event.comment.body, 'review'))

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Request情報を取得
        id: pr_info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(echo "${{ github.event.issue.number }}")
          PR_DATA=$(gh pr view ${PR_NUMBER} --json title,body,headRefName,baseRefName)
          echo "number=${PR_NUMBER}" >> $GITHUB_OUTPUT
          echo "data<<EOF" >> $GITHUB_OUTPUT
          echo "${PR_DATA}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Pull Requestのファイル差分を取得
        id: pr_diff
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ steps.pr_info.outputs.number }}
          gh pr diff ${PR_NUMBER} > pr_diff.txt
          echo "diff_file=pr_diff.txt" >> $GITHUB_OUTPUT

      - name: Node.js環境をセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: コードレビューを実行
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          npm install -g @openai/codex
          export OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"

          # レビュープロンプトを準備
          cat > codex_ga_review_prompt.md <<EOF
          ## コードレビュー要求

          プロジェクト: Vue 3 アンケート/アセスメント Web アプリケーション

          ### レビュー指示:
          ${COMMENT_BODY}

          ### Pull Request情報:
          ${{ steps.pr_info.outputs.data }}

          ### ファイル差分:
          ```diff
          $(cat ${{ steps.pr_diff.outputs.diff_file }})
          ```

          ### レビュー観点:
          1. CODEX.mdの設計方針に従っているか
          2. Vue 3 Composition API + Vuetify 3の適切な使用
          3. ES6モジュール構成の妥当性
          4. コード品質・可読性
          5. セキュリティ上の問題
          6. パフォーマンスへの影響

          ### 出力形式:
          - 日本語で記載
          - 具体的で建設的なフィードバック
          - 改善提案がある場合はコード例も含める
          - 問題ないポイントも評価する
          EOF

          # Codex CLIでレビューを実行
          REVIEW_RESULT=$(codex -a auto-edit -m gpt-4.1-mini --quiet "$(cat codex_ga_review_prompt.md)")
          echo "${REVIEW_RESULT}" > codex_ga_review_result.json

      - name: Extract output_text via jq and save to file
        run: |
          jq -r '.. | objects | select(.type == "output_text") | .text' codex_ga_review_result.json > codex_ga_review_result_extracted.txt

          # デバッグ
          cat codex_ga_review_result_extracted.txt
          REVIEW_RESULT_EXT=$(cat codex_ga_review_result_extracted.txt)

          # Codex CLIでレビュー結果を整形
          npm install -g @openai/codex
          export OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"

          REVIEW_RESULT_MARKDOWN=$(codex -a auto-edit -m gpt-4.1-mini --quiet "このあとに続くJSONをMarkdownに変換し、人間が**いい感じ**と思うレイアウトにしてください。 ${REVIEW_RESULT_EXT}")
          echo "${REVIEW_RESULT_MARKDOWN}" > codex_ga_review_result_markdown.md

      - name: レビューコメントを投稿
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ steps.pr_info.outputs.number }}

          cat > codex_ga_final_comment.md <<EOF
          ## 🤖 Codex レビュー結果

          $(cat codex_ga_review_result_markdown.md)

          ---
          *このレビューはCodex CLIによって自動生成されました*
          EOF

          gh pr comment ${PR_NUMBER} --body-file codex_ga_final_comment.md
